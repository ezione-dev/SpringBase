<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.akmz.springBase.base.mapper.AuthMapper">
    <!-- 재사용할 WHERE 조건 SQL 조각 정의 -->
    <sql id="whereCondition">
        <where>
            AND USER_NAME = #{userName}
        </where>
    </sql>
    <!-- 로그인 실패 횟수와 시각을 초기화하는 SQL 조각 정의 -->
    <sql id="reSetLoginLock">
        UPDATE users
        SET LOGIN_FAILURE_COUNT = 0,
        LAST_FAILURE_TIMESTAMP = NULL
        <include refid="whereCondition" />
    </sql>


    <select id="findByUsername" resultType="com.akmz.springBase.base.model.entity.AuthUser">
            -- 유저 정보를 가져오기
            SELECT USER_NAME, PASSWORD, REFRESH_TOKEN, USE_YN, LOGIN_FAILURE_COUNT, LAST_FAILURE_TIMESTAMP
            FROM users
            <include refid="whereCondition" />
    </select>

    <select id="getAuthoritiesByUsername" resultType="String">
            -- 권한을 가져오기
            SELECT AUTHORITY
            FROM authorities
            <include refid="whereCondition" />
    </select>

    <update id="updateRefreshToken" parameterType="com.akmz.springBase.base.model.entity.AuthUser">
        -- 리프레쉬 토큰을 DB에 저장
        UPDATE users SET REFRESH_TOKEN = #{refreshToken}
        <include refid="whereCondition" />
    </update>


    <update id="updateLoginFailure">
        -- 로그인 실패 시 호출: 실패 횟수 증가 및 마지막 실패 시각 업데이트
        UPDATE users
        SET LOGIN_FAILURE_COUNT = LOGIN_FAILURE_COUNT + 1,
        LAST_FAILURE_TIMESTAMP = NOW()
        <include refid="whereCondition" />
    </update>


    <update id="resetLoginFailureCount">
        -- 로그인 성공 시 호출: 실패 횟수 초기화
        <include refid="reSetLoginLock" />
    </update>

    <update id="resetLoginFailureOnUnlock">
        -- 잠금 해제 시 호출: 실패 횟수 초기화
        <include refid="reSetLoginLock" />
    </update>
</mapper>
